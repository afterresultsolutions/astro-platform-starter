---
import { Image } from 'astro:assets';
import corgi from '../assets/corgi.jpg';
import ContextAlert from '../components/ContextAlert.astro';
import Diff from '../components/Diff.astro';
import Markdown from '../components/Markdown.astro';
import Layout from '../layouts/Layout.astro';

import { getNetlifyContext } from '../utils';

const sampleImage = '/images/corgi.jpg';

const ctx = getNetlifyContext();
const forceWebP = ctx === 'dev';
const sampleImageSrcSet = [640, 1280, 2048]
    .map((size) => {
        return `/.netlify/images?url=${sampleImage}&w=${size}${forceWebP ? '&fm=webp' : ''} ${size}w`;
    })
    .join(', ');
const sizes = '(max-width: 1024px) 100vw, 1024px';

const astroImageSnippet = `
## Using the built-in Astro &lt;Image /&gt; component

Astro's \`Image\` component will automatically use Netlify Image CDN to serve optimized images.

~~~jsx
---
import { Image } from 'astro:assets';
import corgi from '../assets/corgi.jpg';
---
// Later in your markup...
<Image src={corgi} alt="Corgi" /* ... additional props */ />
~~~
`;

const originalVsCdnSnippet = `
## Original vs. optimized image: can you tell the difference?
<meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Service Search Engine</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
  <style>
    body {
      font-family: "Inter", sans-serif;
      margin: 0;
      padding: 0;
      line-height: 1.6;
      background-color: #ffffff;
      color: #ffffff;
    }

    #startupSearchEngine {
      margin: 20px auto;
      max-width: 800px;
      text-align: center;
    }

    #startupSearchEngine h1 {
      font-size: 12px;
      margin-bottom: 20px;
      color: #000;
    }

    #startupSearchEngine input[type="text"] {
      width: 90%;
      max-width: 600px;
      padding: 10px 12px;
      font-size: 12px;
      border: 1px solid #ddd;
      border-radius: 30px;
      background-color: transparent;
      color: #ffffff;
      box-sizing: border-box;
      transition: border-color 0.3s ease;
    }

    .results {
      margin-top: 20px;
    }

    .idea {
      padding: 6px;
      border-bottom: 1px solid #eee;
      cursor: pointer;
      transition: transform 0.3s ease, color 0.3s ease;
      background-color: transparent;
      color: white;
    }

    .idea:hover {
      transform: scale(1.05);
      color: #4285f4;
    }

    .idea a:hover {
      text-decoration: underline;
    }

    .shortcuts {
      display: flex;
      justify-content: center;
      gap: 12px;
      margin-top: 40px;
      flex-wrap: wrap;
    }

    .shortcut {
      padding: 5px 12px;
      background-color: transparent;
      color: #000;
      font-size: 11px;
      border: 1px solid #333;
      border-radius: 30px;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 6px;
      cursor: pointer;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .shortcut:hover {
      background-color: #4285f4;
      color: white;
    }

    .shortcut i {
      font-size: 16px;
    }

    @media (max-width: 600px) {
      #startupSearchEngine input[type="text"] {
        width: 90%;
      }
      .shortcuts {
        flex-direction: column;
        gap: 12px;
      }
    }

    #serviceModal {
      display: none;
      position: fixed;
      z-index: 9999;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.7);
    }

    #serviceModalContent {
      background: #000;
      padding: 10px 15px;
      max-width: 500px;
      width: 100%;
      border-radius: 12px;
      text-align: center;
      color: white;
      margin: 10% auto;
      position: relative;
    }

    .modal-btn, .discount-btn, .close-btn {
      margin: 8px 0;
      padding: 12px 25px;
      width: 100%;
      border: none;
      border-radius: 30px;
      font-size: 12px;
      cursor: pointer;
    }

    .modal-btn {
      background-color: #222;
      color: white;
    }

    .modal-btn:hover {
      background-color: #3498db;
      box-shadow: 0 0 10px #3498db;
    }

    .discount-btn {
      background: linear-gradient(90deg, #f39c12 0%, #e74c3c 100%);
      color: white;
      box-shadow: 0 0 12px #f39c12;
    }

    .discount-btn:hover {
      background: linear-gradient(90deg, #e67e22 0%, #c0392b 100%);
      box-shadow: 0 0 20px #e74c3c;
    }

    .close-btn {
      background-color: transparent;
      color: #999;
    }

    .close-btn:hover {
      color: #f39c12;
    }
  </style>


  <div id="startupSearchEngine">
    <h1></h1>
    <input type="text" id="searchBox" placeholder="Type a keyword to search..." oninput="searchIdeas()">
    <div class="results" id="results"></div>
    <div class="shortcuts">
      <a href="https://cdn2.f-cdn.com/files/download/257089198/afterresult.pdf" class="shortcut"><i class="fas fa-search" style="color: #f39c12"></i> Explore</a>
      <a href="https://www.afterresult.com/pricing" class="shortcut"><i class="fas fa-envelope" style="color: #e74c3c"></i> Pricing</a>
      <a href="https://wa.me/919991283530?text=Hi%2C%20I%20have%20a%20startup..." class="shortcut"><i class="fas fa-rocket" style="color: #2ecc71"></i> Startups</a>
      <a href="https://api.whatsapp.com/message/JVXJASR6S4Q5I1" class="shortcut"><i class="fas fa-briefcase" style="color: #3498db"></i> Request a call Back</a>
    </div>
  </div>

  <div id="serviceModal">
    <div id="serviceModalContent">
      <h4 id="modalTitle" style="margin-bottom: 40px;">Service</h4>
      <button id="downloadProfileBtn" class="modal-btn">Download Company Profile</button>
      <button id="openWhatsAppBtn" class="modal-btn">Chat on WhatsApp</button>
      <button id="bookCallBtn" class="modal-btn">Book a Call</button>
      <button id="discountBtn" class="discount-btn">Get a Discount Now</button>
      <button class="close-btn" onclick="closeModal()">Close</button>
    </div>
  </div>

  <script>
    const startupIdeas = [
      { keyword: "Marketplace management" },
      { keyword: "E-commerce development" },
      { keyword: "Amazon management" },
      { keyword: "Flipkart account management" },
      { keyword: "Startup websites" },
      { keyword: "Business development" },
      { keyword: "Shopify store development" },
      { keyword: "WooCommerce website development" },
      { keyword: "WordPress website development" },
      { keyword: "Social media marketing" },
      { keyword: "Google My Business setup" },
      { keyword: "Digital marketing agency services" },
      { keyword: "Brand identity creation" },
      { keyword: "Appointment scheduling website design" },
      { keyword: "Static page website development" },
      { keyword: "Quick commerce product listings" },
      { keyword: "Catalog development for online stores" },
      { keyword: "Spas and salon marketing services" },
      { keyword: "Custom Shopify theme development" },
    ];

    function searchIdeas() {
      const query = document.getElementById("searchBox").value.toLowerCase();
      const resultsDiv = document.getElementById("results");
      if (!query) return resultsDiv.innerHTML = "";
      const results = startupIdeas.filter(idea => idea.keyword.toLowerCase().includes(query)).slice(0, 6);
      resultsDiv.innerHTML = results.map(idea => `<div class="idea"><a href="javascript:void(0)" onclick="openServiceModal('${idea.keyword}')">${idea.keyword}</a></div>`).join("");
    }

    function openServiceModal(serviceName) {
      document.getElementById("modalTitle").textContent = serviceName;
      document.getElementById("serviceModal").style.display = "block";

      document.getElementById("downloadProfileBtn").onclick = () => window.open("https://cdn2.f-cdn.com/files/download/257089198/afterresult.pdf", "_blank");
      document.getElementById("openWhatsAppBtn").onclick = () => window.open(`https://wa.me/919991283530?text=Hi%2C%20I%20am%20interested%20in%20${encodeURIComponent(serviceName)}.`, "_blank");
      document.getElementById("bookCallBtn").onclick = () => window.open("https://www.afterresult.com/demo-call", "_blank");
      document.getElementById("discountBtn").onclick = () => alert("Discount will be applied during discussion.");
    }

    function closeModal() {
      document.getElementById("serviceModal").style.display = "none";
    }
  </script>

In the code below, a regular \`<img>\` tag is used in both cases for a framework-agnostic example. 
Note that aside from Astro's \`Image\` or rolling your own \`<img>\` tags, you can also use the excellent [unpic-img](https://unpic.pics/) package.

~~~jsx
// <== On the left, the original image
<img src="/images/corgi.jpg" alt="Corgi" />

// ==> On the right, explicitly using Netlify Image CDN endpoint for a responsive image
<img 
  srcSet="${sampleImageSrcSet}"
  sizes="${sizes}" 
  alt="Corgi" 
/>
~~~
`;

const devModeWarning = `
In local development, optimization is performed locally without automatic format
detection, so format is set to WebP.
`;
---

<Layout title="Image CDN">
    <div class="flex flex-col gap-12 sm:gap-16">
        <section>
            <ContextAlert
                addedChecksFunction={(ctx) => {
                    return ctx === 'dev' ? devModeWarning : null;
                }}
                class="mb-8"
            />
            <h1>Image CDN</h1>
        </section>
        <section>
            <Markdown content={astroImageSnippet} class="mb-8" />
            <figure>
                <Image src={corgi} alt="Corgi" class="border-2 border-white rounded-lg" />
                <figcaption class="mt-2 text-sm italic">
                    Credit: photo by <a href="https://unsplash.com/@alvannee">Alvan Nee</a> on
                    <a href="https://unsplash.com/photos/long-coated-white-and-brown-dog-lvFlpqEvuRM"> Unsplash </a>
                </figcaption>
            </figure>
        </section>
        <section>
            <Markdown content={originalVsCdnSnippet} class="mb-8" />
            <Diff class="border-2 border-white rounded-lg image-diff aspect-3/2">
                <Fragment slot="item-1">
                    <div>
                        <div class="relative">
                            <span class="hidden absolute py-1.5 px-2.5 text-sm rounded-md bg-gray-900/70 top-2.5 left-2.5"></span>
                            <img src={sampleImage} alt="Corgi" />
                        </div>
                    </div>
                </Fragment>
                <Fragment slot="item-2">
                    <div>
                        <div class="relative">
                            <span class="hidden absolute py-1.5 px-2.5 text-sm rounded-md bg-gray-900/70 top-2.5 right-2.5"></span>

                            <img srcset={sampleImageSrcSet} alt="Corgi" />
                        </div>
                    </div>
                </Fragment>
            </Diff>
        </section>
    </div>
</Layout>

<script>
    const images = document.querySelectorAll<HTMLImageElement>('.image-diff img');

    images.forEach((image) => {
        if (image.complete) {
            showImageSize(image);
        } else {
            image.addEventListener('load', () => {
                showImageSize(image);
            });
        }
    });

    function showImageSize(image: HTMLImageElement) {
        const imageEntry = window?.performance?.getEntriesByName(image.currentSrc)?.[0] as PerformanceResourceTiming;
        if (imageEntry && imageEntry.encodedBodySize) {
            const imageOverlay = image.previousElementSibling;
            imageOverlay.classList.remove('hidden');
            imageOverlay.textContent = `Size: ${Math.ceil(imageEntry.encodedBodySize / 1024)}KB`;
        }
    }
</script>
